{"ast":null,"code":"var _jsxFileName = \"/home/vikas/workspace/loader-modal/src/components/Modal/index.js\";\nimport React, { useState } from 'react';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = props => {\n  const {\n    openModal\n  } = props;\n\n  const handleClick = () => {\n    if (!openModal) {\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    }\n\n    ;\n    this.setState(prevState => ({\n      openModal: !prevState.openModal\n    }));\n  };\n\n  const handleOutsideClick = e => {\n    if (!this.node.contains(e.target)) {\n      this.handleClick();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => {\n      this.node = node;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), this.state.openModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Some text in the Modal..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(),\n        children: \"close modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/vikas/workspace/loader-modal/src/components/Modal/index.js"],"names":["React","useState","Modal","props","openModal","handleClick","document","addEventListener","handleOutsideClick","removeEventListener","setState","prevState","e","node","contains","target","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;;AAEA,QAAME,WAAW,GAAG,MAAM;AACxB,QAAI,CAACD,SAAL,EAAgB;AACdE,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,kBAAxC,EAA4D,KAA5D;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKD,kBAA3C,EAA+D,KAA/D;AACD;;AAAA;AAED,SAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1BP,MAAAA,SAAS,EAAE,CAACO,SAAS,CAACP;AADI,KAAL,CAAvB;AAGD,GAVD;;AAYA,QAAMI,kBAAkB,GAAGI,CAAC,IAAI;AAC9B,QAAI,CAAC,KAAKC,IAAL,CAAUC,QAAV,CAAmBF,CAAC,CAACG,MAArB,CAAL,EAAkC;AAChC,WAAKV,WAAL;AACD;AACF,GAJD;;AAMA,sBACE;AACE,IAAA,GAAG,EAAEQ,IAAI,IAAI;AACX,WAAKA,IAAL,GAAYA,IAAZ;AACD,KAHH;AAAA,4BAKE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMG,KAAKW,KAAL,CAAWZ,SAAX,iBACC;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMC,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAvCD;;KAAMH,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Modal.css'\n\nconst Modal = (props) => {\n  const { openModal } = props;\n\n  const handleClick = () => {\n    if (!openModal) {\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    };\n\n    this.setState(prevState => ({\n      openModal: !prevState.openModal\n    }));\n  };\n\n  const handleOutsideClick = e => {\n    if (!this.node.contains(e.target)){\n      this.handleClick();\n    }\n  };\n\n  return (\n    <div\n      ref={node => {\n        this.node = node;\n      }}\n    >\n      <button onClick={this.handleClick}>Open Modal</button>\n      {this.state.openModal && (\n        <div id=\"myModal\" className=\"modal\">\n          <div className=\"modal-content\">\n            <span className=\"close\">&times;</span>\n            <p>Some text in the Modal..</p>\n          </div>\n          <button onClick={() => handleClick()}>close modal</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}